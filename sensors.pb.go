// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.4
// source: sensor.proto

package sensors

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PayloadType int32

const (
	PayloadType_PAYLOAD_TYPE_NONE          PayloadType = 0
	PayloadType_PAYLOAD_TYPE_HUMIDITY      PayloadType = 1
	PayloadType_PAYLOAD_TYPE_TEMPERATURE   PayloadType = 2
	PayloadType_PAYLOAD_TYPE_LIGHT         PayloadType = 3
	PayloadType_PAYLOAD_TYPE_MOTION        PayloadType = 4
	PayloadType_PAYLOAD_TYPE_PRESSURE      PayloadType = 5
	PayloadType_PAYLOAD_TYPE_ACCELEROMETER PayloadType = 6
	PayloadType_PAYLOAD_TYPE_GYROSCOPE     PayloadType = 7
	PayloadType_PAYLOAD_TYPE_MAGNETOMETER  PayloadType = 8
	PayloadType_PAYLOAD_TYPE_ALTITUDE      PayloadType = 9
	PayloadType_PAYLOAD_TYPE_BATTERY       PayloadType = 10
	PayloadType_PAYLOAD_TYPE_LUX           PayloadType = 11
	PayloadType_PAYLOAD_TYPE_UV            PayloadType = 12
)

// Enum value maps for PayloadType.
var (
	PayloadType_name = map[int32]string{
		0:  "PAYLOAD_TYPE_NONE",
		1:  "PAYLOAD_TYPE_HUMIDITY",
		2:  "PAYLOAD_TYPE_TEMPERATURE",
		3:  "PAYLOAD_TYPE_LIGHT",
		4:  "PAYLOAD_TYPE_MOTION",
		5:  "PAYLOAD_TYPE_PRESSURE",
		6:  "PAYLOAD_TYPE_ACCELEROMETER",
		7:  "PAYLOAD_TYPE_GYROSCOPE",
		8:  "PAYLOAD_TYPE_MAGNETOMETER",
		9:  "PAYLOAD_TYPE_ALTITUDE",
		10: "PAYLOAD_TYPE_BATTERY",
		11: "PAYLOAD_TYPE_LUX",
		12: "PAYLOAD_TYPE_UV",
	}
	PayloadType_value = map[string]int32{
		"PAYLOAD_TYPE_NONE":          0,
		"PAYLOAD_TYPE_HUMIDITY":      1,
		"PAYLOAD_TYPE_TEMPERATURE":   2,
		"PAYLOAD_TYPE_LIGHT":         3,
		"PAYLOAD_TYPE_MOTION":        4,
		"PAYLOAD_TYPE_PRESSURE":      5,
		"PAYLOAD_TYPE_ACCELEROMETER": 6,
		"PAYLOAD_TYPE_GYROSCOPE":     7,
		"PAYLOAD_TYPE_MAGNETOMETER":  8,
		"PAYLOAD_TYPE_ALTITUDE":      9,
		"PAYLOAD_TYPE_BATTERY":       10,
		"PAYLOAD_TYPE_LUX":           11,
		"PAYLOAD_TYPE_UV":            12,
	}
)

func (x PayloadType) Enum() *PayloadType {
	p := new(PayloadType)
	*p = x
	return p
}

func (x PayloadType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayloadType) Descriptor() protoreflect.EnumDescriptor {
	return file_sensor_proto_enumTypes[0].Descriptor()
}

func (PayloadType) Type() protoreflect.EnumType {
	return &file_sensor_proto_enumTypes[0]
}

func (x PayloadType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PayloadType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PayloadType(num)
	return nil
}

// Deprecated: Use PayloadType.Descriptor instead.
func (PayloadType) EnumDescriptor() ([]byte, []int) {
	return file_sensor_proto_rawDescGZIP(), []int{0}
}

type SensorMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction   *bool        `protobuf:"varint,1,req,name=direction" json:"direction,omitempty"`
	SequenceId  *uint32      `protobuf:"fixed32,2,opt,name=sequence_id,json=sequenceId" json:"sequence_id,omitempty"`
	NodeId      []byte       `protobuf:"bytes,3,req,name=node_id,json=nodeId" json:"node_id,omitempty"`
	PayloadType *PayloadType `protobuf:"varint,4,req,name=payload_type,json=payloadType,enum=PayloadType" json:"payload_type,omitempty"`
	Payload     *int32       `protobuf:"varint,5,req,name=payload" json:"payload,omitempty"`
}

func (x *SensorMessage) Reset() {
	*x = SensorMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sensor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SensorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SensorMessage) ProtoMessage() {}

func (x *SensorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_sensor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SensorMessage.ProtoReflect.Descriptor instead.
func (*SensorMessage) Descriptor() ([]byte, []int) {
	return file_sensor_proto_rawDescGZIP(), []int{0}
}

func (x *SensorMessage) GetDirection() bool {
	if x != nil && x.Direction != nil {
		return *x.Direction
	}
	return false
}

func (x *SensorMessage) GetSequenceId() uint32 {
	if x != nil && x.SequenceId != nil {
		return *x.SequenceId
	}
	return 0
}

func (x *SensorMessage) GetNodeId() []byte {
	if x != nil {
		return x.NodeId
	}
	return nil
}

func (x *SensorMessage) GetPayloadType() PayloadType {
	if x != nil && x.PayloadType != nil {
		return *x.PayloadType
	}
	return PayloadType_PAYLOAD_TYPE_NONE
}

func (x *SensorMessage) GetPayload() int32 {
	if x != nil && x.Payload != nil {
		return *x.Payload
	}
	return 0
}

var File_sensor_proto protoreflect.FileDescriptor

var file_sensor_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb2,
	0x01, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x08, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x07, 0x52, 0x0a, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0c,
	0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x0c,
	0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x05, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x2a, 0xe4, 0x02, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x41, 0x59, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x41,
	0x59, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x48, 0x55, 0x4d, 0x49, 0x44,
	0x49, 0x54, 0x59, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x41, 0x59, 0x4c, 0x4f, 0x41, 0x44,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x45, 0x4d, 0x50, 0x45, 0x52, 0x41, 0x54, 0x55, 0x52,
	0x45, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x41, 0x59, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x50,
	0x41, 0x59, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x4f, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x41, 0x59, 0x4c, 0x4f, 0x41, 0x44, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x53, 0x55, 0x52, 0x45, 0x10, 0x05, 0x12,
	0x1e, 0x0a, 0x1a, 0x50, 0x41, 0x59, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x41, 0x43, 0x43, 0x45, 0x4c, 0x45, 0x52, 0x4f, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x10, 0x06, 0x12,
	0x1a, 0x0a, 0x16, 0x50, 0x41, 0x59, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x47, 0x59, 0x52, 0x4f, 0x53, 0x43, 0x4f, 0x50, 0x45, 0x10, 0x07, 0x12, 0x1d, 0x0a, 0x19, 0x50,
	0x41, 0x59, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x41, 0x47, 0x4e,
	0x45, 0x54, 0x4f, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x10, 0x08, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x41,
	0x59, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x4c, 0x54, 0x49, 0x54,
	0x55, 0x44, 0x45, 0x10, 0x09, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x41, 0x59, 0x4c, 0x4f, 0x41, 0x44,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x41, 0x54, 0x54, 0x45, 0x52, 0x59, 0x10, 0x0a, 0x12,
	0x14, 0x0a, 0x10, 0x50, 0x41, 0x59, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x4c, 0x55, 0x58, 0x10, 0x0b, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x41, 0x59, 0x4c, 0x4f, 0x41, 0x44,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x56, 0x10, 0x0c, 0x42, 0x20, 0x5a, 0x1e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x61, 0x74, 0x61, 0x6e, 0x6f, 0x69,
	0x73, 0x65, 0x54, 0x56, 0x2f, 0x73, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x73,
}

var (
	file_sensor_proto_rawDescOnce sync.Once
	file_sensor_proto_rawDescData = file_sensor_proto_rawDesc
)

func file_sensor_proto_rawDescGZIP() []byte {
	file_sensor_proto_rawDescOnce.Do(func() {
		file_sensor_proto_rawDescData = protoimpl.X.CompressGZIP(file_sensor_proto_rawDescData)
	})
	return file_sensor_proto_rawDescData
}

var file_sensor_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_sensor_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_sensor_proto_goTypes = []interface{}{
	(PayloadType)(0),      // 0: PayloadType
	(*SensorMessage)(nil), // 1: SensorMessage
}
var file_sensor_proto_depIdxs = []int32{
	0, // 0: SensorMessage.payload_type:type_name -> PayloadType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_sensor_proto_init() }
func file_sensor_proto_init() {
	if File_sensor_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sensor_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SensorMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sensor_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sensor_proto_goTypes,
		DependencyIndexes: file_sensor_proto_depIdxs,
		EnumInfos:         file_sensor_proto_enumTypes,
		MessageInfos:      file_sensor_proto_msgTypes,
	}.Build()
	File_sensor_proto = out.File
	file_sensor_proto_rawDesc = nil
	file_sensor_proto_goTypes = nil
	file_sensor_proto_depIdxs = nil
}
